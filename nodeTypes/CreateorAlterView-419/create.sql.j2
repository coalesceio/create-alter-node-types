{#
    Copyright (c) 2023 Coalesce. All rights reserved.
This script and its associated documentation are confidential and proprietary to Coalesce.
Unauthorized reproduction, distribution, or disclosure of this material is strictly prohibited.
Coalesce permits you to copy and modify this script for the purposes of using with Coalsce but
does not permit copying or modification for any other purpose.  
#}
{# == Node Type Version        : 1  == #}
{# == Node Type Name           : Create or Alter View == #}
{# == Node Type Description    : This node loads data into the table created and inserts data into the same == #}


{% if desiredState == currentState %}

{{ stage('Nothing to do.') }}
select 1 = 0

{% elif desiredState == undefined %}

    {# Table or View Name #}
    {% set targetObjectDatabase = ref_no_link(currentState.node.location.name, currentState.node.name).split('.')[0] %} 
    {% set targetObjectSchema = ref_no_link(currentState.node.location.name, currentState.node.name).split('.')[1] %} 
    {% set fullyQualifiedTargetObjectName = ref_no_link(currentState.node.location.name, currentState.node.name) %}
    
       {{ stage('Drop ' + currentState.node.materializationType , true, "sql", "drop") }}
       DROP VIEW IF EXISTS {{ fullyQualifiedTargetObjectName }}

{% elif currentState == undefined or (currentState != undefined and desiredState != currentState) %}


   {% set ns = namespace(column_constraints=[],constraint='',flag=false,primarykeyValues='',foreignkeyValues='',foreignk='') %} 
       
        {# CreateSQL for View #}
        {{ stage('Create/Alter View') }}

	  CREATE OR ALTER {% if desiredState.config.secureoption %} SECURE {% endif %} VIEW {{ ref_no_link(desiredState.node.location.name, desiredState.node.name) }}
        (
            {% for col in desiredState.columns %}
                "{{ col.name }}"
                {%- if col.description | length > 0 %} COMMENT '{{ col.description | escape }}'{% endif %}
                {%- if not loop.last -%}, {% endif %}
            {% endfor %}
        )
        {%- if desiredState.node.description | length > 0 %} COMMENT = '{{ desiredState.node.description | escape }}'{% endif %}
        {%if desiredState.config.changetracking == true %}CHANGE_TRACKING = {{desiredState.config.changetracking}}{%endif%}
        AS
        {% for source in desiredState.sources %}
            SELECT
            {% if desiredState.config.selectDistinct %}
              DISTINCT
            {% endif %}
            {% for col in source.columns %}
                {{ get_source_transform(col) }} AS "{{ col.name }}"
                {%- if not loop.last -%}, {% endif %}
            {% endfor %}
            {{ source.join }}
        {%endfor%}

    {%endif%}